{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/raza/C282A19582A18E8B/Web Developer Journey/NextJs/nextjs-authentication/components/auth/auth-form.js\";\nimport { useState, useRef } from 'react';\nimport classes from './auth-form.module.css';\n\nasync function createUser(email, password) {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"some thing is wrong !\");\n  }\n\n  return data;\n}\n\nfunction AuthForm() {\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  function switchAuthModeHandler() {\n    setIsLogin(prevState => !prevState);\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n\n    if (isLogin) {// log user in\n    } else {\n      createUser(emailInputRef.current.value, pas);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["/media/raza/C282A19582A18E8B/Web Developer Journey/NextJs/nextjs-authentication/components/auth/auth-form.js"],"names":["useState","useRef","classes","createUser","email","password","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","AuthForm","isLogin","setIsLogin","emailInputRef","passwordInputRef","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","current","value","pas","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\nimport classes from './auth-form.module.css';\n\nasync function createUser(email , password){\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    body : JSON.stringify({email , password}),\n    headers:{\n      \"Content-Type\" : \"application/json\"\n    }\n  })\n\n  const data = response.json()\n  if(!response.ok){\n    throw new Error(data.message || \"some thing is wrong !\")\n  }\n\n  return data\n}\n\nfunction AuthForm() {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef()\n  const passwordInputRef = useRef()\n\n  function switchAuthModeHandler() {\n    setIsLogin((prevState) => !prevState);\n  }\n\n  function submitHandler(e){\n    e.preventDefault()\n\n    if(isLogin){\n      // log user in\n\n    }else{\n      createUser(emailInputRef.current.value , pas)\n    }\n\n\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef} />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}