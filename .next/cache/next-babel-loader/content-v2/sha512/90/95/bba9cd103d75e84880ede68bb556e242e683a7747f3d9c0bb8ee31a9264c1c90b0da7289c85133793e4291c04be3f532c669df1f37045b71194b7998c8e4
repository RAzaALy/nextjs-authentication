{"ast":null,"code":"import { hassPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method !== \"POST\") {\n    return;\n  }\n\n  const {\n    email,\n    password\n  } = req.body;\n\n  if (!email || !email.includes(\"@\") || !password || password.trim() === \"\" || email.trim() === \"\" || password.trim().length < 7) {\n    res.status(422).json({\n      message: \"Invalid Creditionals   ...\"\n    });\n    return;\n  }\n\n  const client = await connectToDatabase();\n  const db = client.db();\n  const hashedPassword = await hassPassword();\n  await db.collection(\"users\").insertOne({\n    email,\n    password: hashedPassword\n  });\n  res.status(201).json({\n    message: \"created user !\"\n  });\n}\n\nexport default handler;","map":{"version":3,"sources":["/media/raza/C282A19582A18E8B/Web Developer Journey/NextJs/nextjs-authentication/pages/api/auth/signup.js"],"names":["hassPassword","connectToDatabase","handler","req","res","method","email","password","body","includes","trim","length","status","json","message","client","db","hashedPassword","collection","insertOne"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACvB;AACH;;AACD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBJ,GAAG,CAACK,IAAhC;;AACA,MACE,CAACF,KAAD,IACA,CAACA,KAAK,CAACG,QAAN,CAAe,GAAf,CADD,IAEA,CAACF,QAFD,IAGAA,QAAQ,CAACG,IAAT,OAAoB,EAHpB,IAIAJ,KAAK,CAACI,IAAN,OAAiB,EAJjB,IAKAH,QAAQ,CAACG,IAAT,GAAgBC,MAAhB,GAAyB,CAN3B,EAOE;AACAP,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACA;AACD;;AAED,QAAMC,MAAM,GAAG,MAAMd,iBAAiB,EAAtC;AACA,QAAMe,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,QAAMC,cAAc,GAAG,MAAMjB,YAAY,EAAzC;AAEA,QAAMgB,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBC,SAAvB,CAAiC;AACrCb,IAAAA,KADqC;AAErCC,IAAAA,QAAQ,EAAEU;AAF2B,GAAjC,CAAN;AAKAb,EAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAArB;AACD;;AAED,eAAeZ,OAAf","sourcesContent":["import { hassPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method !== \"POST\") {\n      return;\n  }\n  const { email, password } = req.body;\n  if (\n    !email ||\n    !email.includes(\"@\") ||\n    !password ||\n    password.trim() === \"\" ||\n    email.trim() === \"\" ||\n    password.trim().length < 7\n  ) {\n    res.status(422).json({ message: \"Invalid Creditionals   ...\" });\n    return;\n  }\n\n  const client = await connectToDatabase();\n  const db = client.db();\n\n  const hashedPassword = await hassPassword();\n\n  await db.collection(\"users\").insertOne({\n    email,\n    password: hashedPassword,\n  });\n\n  res.status(201).json({ message: \"created user !\" });\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}