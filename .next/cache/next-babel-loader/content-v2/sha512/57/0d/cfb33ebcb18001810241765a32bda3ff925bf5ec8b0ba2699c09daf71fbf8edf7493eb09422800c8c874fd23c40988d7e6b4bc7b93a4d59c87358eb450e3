{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/raza/C282A19582A18E8B/Web Developer Journey/NextJs/nextjs-authentication/components/auth/auth-form.js\";\nimport { useState, useRef } from \"react\";\nimport classes from \"./auth-form.module.css\";\nimport { signIn } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\n\nasync function createUser(email, password) {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = response.json(); // if (!response.ok) {\n  //   throw new Error(data.message || \"some thing is wrong !\");\n  // }\n\n  return data;\n}\n\nfunction AuthForm() {\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const router = useRouter();\n\n  function switchAuthModeHandler() {\n    setIsLogin(prevState => !prevState);\n  }\n\n  async function submitHandler(e) {\n    e.preventDefault();\n\n    if (isLogin) {\n      // log user in\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email: emailInputRef.current.value,\n        password: passwordInputRef.current.value\n      });\n\n      if (!result.error) {\n        // set some auth state\n        router.replace(\"/profile\");\n      }\n\n      console.log(result);\n    } else {\n      try {\n        const result = await createUser(emailInputRef.current.value, passwordInputRef.current.value);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["/media/raza/C282A19582A18E8B/Web Developer Journey/NextJs/nextjs-authentication/components/auth/auth-form.js"],"names":["useState","useRef","classes","signIn","useRouter","createUser","email","password","response","fetch","method","body","JSON","stringify","headers","data","json","AuthForm","isLogin","setIsLogin","emailInputRef","passwordInputRef","router","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","result","redirect","current","value","error","replace","console","log","auth","control","actions","toggle"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAGA,eAAeC,UAAf,CAA0BC,KAA1B,EAAiCC,QAAjC,EAA2C;AAEzC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;AAC/CC,IAAAA,MAAM,EAAE,MADuC;AAE/CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf,CAFyC;AAG/CO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHsC,GAArB,CAA5B;AAQA,QAAMC,IAAI,GAAGP,QAAQ,CAACQ,IAAT,EAAb,CAVyC,CAWzC;AACA;AACA;;AAEA,SAAOD,IAAP;AACD;;AAED,SAASE,QAAT,GAAoB;AAClB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBnB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMoB,aAAa,GAAGnB,MAAM,EAA5B;AACA,QAAMoB,gBAAgB,GAAGpB,MAAM,EAA/B;AACA,QAAMqB,MAAM,GAAGlB,SAAS,EAAxB;;AAEA,WAASmB,qBAAT,GAAiC;AAC/BJ,IAAAA,UAAU,CAAEK,SAAD,IAAe,CAACA,SAAjB,CAAV;AACD;;AAED,iBAAeC,aAAf,CAA6BC,CAA7B,EAAgC;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIT,OAAJ,EAAa;AACX;AAEA,YAAMU,MAAM,GAAG,MAAMzB,MAAM,CAAC,aAAD,EAAgB;AACzC0B,QAAAA,QAAQ,EAAE,KAD+B;AAEzCvB,QAAAA,KAAK,EAAEc,aAAa,CAACU,OAAd,CAAsBC,KAFY;AAGzCxB,QAAAA,QAAQ,EAAEc,gBAAgB,CAACS,OAAjB,CAAyBC;AAHM,OAAhB,CAA3B;;AAKA,UAAI,CAACH,MAAM,CAACI,KAAZ,EAAmB;AACjB;AACAV,QAAAA,MAAM,CAACW,OAAP,CAAe,UAAf;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACD,KAbD,MAaO;AACL,UAAI;AACF,cAAMA,MAAM,GAAG,MAAMvB,UAAU,CAC7Be,aAAa,CAACU,OAAd,CAAsBC,KADO,EAE7BV,gBAAgB,CAACS,OAAjB,CAAyBC,KAFI,CAA/B;AAIAG,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACD,OAND,CAME,OAAOI,KAAP,EAAc;AACdE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF;AACF;;AAED,sBACE;AAAS,IAAA,SAAS,EAAE9B,OAAO,CAACkC,IAA5B;AAAA,4BACE;AAAA,gBAAKlB,OAAO,GAAG,OAAH,GAAa;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEO,aAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEvB,OAAO,CAACmC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAC,OAAvB;AAA+B,UAAA,QAAQ,MAAvC;AAAwC,UAAA,GAAG,EAAEjB;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAElB,OAAO,CAACmC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,GAAG,EAAEhB;AAJP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAcE;AAAK,QAAA,SAAS,EAAEnB,OAAO,CAACoC,OAAxB;AAAA,gCACE;AAAA,oBAASpB,OAAO,GAAG,OAAH,GAAa;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEhB,OAAO,CAACqC,MAFrB;AAGE,UAAA,OAAO,EAAEhB,qBAHX;AAAA,oBAKGL,OAAO,GAAG,oBAAH,GAA0B;AALpC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;AAED,eAAeD,QAAf","sourcesContent":["import { useState, useRef } from \"react\";\nimport classes from \"./auth-form.module.css\";\nimport { signIn } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\n\n\nasync function createUser(email, password) {\n  \n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const data = response.json();\n  // if (!response.ok) {\n  //   throw new Error(data.message || \"some thing is wrong !\");\n  // }\n\n  return data;\n}\n\nfunction AuthForm() {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const router = useRouter();\n\n  function switchAuthModeHandler() {\n    setIsLogin((prevState) => !prevState);\n  }\n\n  async function submitHandler(e) {\n    e.preventDefault();\n\n    if (isLogin) {\n      // log user in\n\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email: emailInputRef.current.value,\n        password: passwordInputRef.current.value,\n      });\n      if (!result.error) {\n        // set some auth state\n        router.replace(\"/profile\");\n      }\n      console.log(result);\n    } else {\n      try {\n        const result = await createUser(\n          emailInputRef.current.value,\n          passwordInputRef.current.value\n        );\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}